{"version":3,"sources":["../../src/socket/index.js"],"names":["generateMessage","from","text","io","on","console","log","socket","emit","broadcast","params","callback","isRealString","name","room","message","generateLocationMessage","coords","latitude","longitude"],"mappings":";;;;;AAAA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACtC,SAAO;AACLD,cADK;AAELC;AACA;AAHK,GAAP;AAKD,CAND;;kBAQe,cAAM;AACnBC,KAAGC,EAAH,CAAM,YAAN,EAAoB,kBAAU;AAC5BC,YAAQC,GAAR,CAAY,oBAAZ;;AAEAC,WAAOC,IAAP,CACE,YADF,EAEER,gBAAgB,OAAhB,EAAyB,yBAAzB,CAFF;;AAKAO,WAAOE,SAAP,CAAiBD,IAAjB,CACE,YADF,EAEER,gBAAgB,OAAhB,EAAyB,iBAAzB,CAFF;;AAKAO,WAAOH,EAAP,CAAU,MAAV,EAAkB,UAACM,MAAD,EAASC,QAAT,EAAsB;AACtC,UAAI,CAACC,aAAaF,OAAOG,IAApB,CAAD,IAA8B,CAACD,aAAaF,OAAOI,IAApB,CAAnC,EAA8D;AAC5DH,iBAAS,kCAAT;AACD;;AAEDA;AACD,KAND;;AAQAJ,WAAOH,EAAP,CAAU,eAAV,EAA2B,UAACW,OAAD,EAAUJ,QAAV,EAAuB;AAChDN,cAAQC,GAAR,CAAY,eAAZ,EAA6BS,OAA7B;AACAZ,SAAGK,IAAH,CAAQ,YAAR,EAAsBR,gBAAgBe,QAAQd,IAAxB,EAA8Bc,QAAQb,IAAtC,CAAtB;AACAS;AACD,KAJD;;AAMAJ,WAAOH,EAAP,CAAU,uBAAV,EAAmC,kBAAU;AAC3CD,SAAGK,IAAH,CACE,oBADF,EAEEQ,wBAAwB,OAAxB,EAAiCC,OAAOC,QAAxC,EAAkDD,OAAOE,SAAzD,CAFF;AAID,KALD;;AAOAZ,WAAOH,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5BC,cAAQC,GAAR,CAAY,uBAAZ;AACD,KAFD;AAGD,GArCD;AAsCD,C","file":"index.js","sourcesContent":["const generateMessage = (from, text) => {\n  return {\n    from,\n    text,\n    // createdAt: moment().valueOf(),\n  };\n};\n\nexport default io => {\n  io.on('connection', socket => {\n    console.log('New user connected');\n\n    socket.emit(\n      'newMessage',\n      generateMessage('Admin', 'Welcome to the chat app'),\n    );\n\n    socket.broadcast.emit(\n      'newMessage',\n      generateMessage('Admin', 'New user joined'),\n    );\n\n    socket.on('join', (params, callback) => {\n      if (!isRealString(params.name) || !isRealString(params.room)) {\n        callback('Name and room name are required.');\n      }\n\n      callback();\n    });\n\n    socket.on('createMessage', (message, callback) => {\n      console.log('createMessage', message);\n      io.emit('newMessage', generateMessage(message.from, message.text));\n      callback();\n    });\n\n    socket.on('createLocationMessage', coords => {\n      io.emit(\n        'newLocationMessage',\n        generateLocationMessage('Admin', coords.latitude, coords.longitude),\n      );\n    });\n\n    socket.on('disconnect', () => {\n      console.log('User was disconnected');\n    });\n  });\n};\n"]}
{"version":3,"sources":["../../src/models/posts.js"],"names":["sequelize","DataTypes","Model","define","username","type","STRING","validate","isIn","args","msg","allowNull","text","len","timestamps"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,QAAQF,UAAUG,MAAV,CACZ,MADY,EAEZ;AACEC,cAAU;AACRC,YAAM,oBAAUC,MAAV,CAAiB,EAAjB,CADE;AAERC,gBAAU;AACRC,cAAM;AACJC,gBAAM,MADF;AAEJC,eAAK;AAFD,SADE;AAKRC,mBAAW,EAAEF,MAAM,KAAR,EAAeC,KAAK,qBAApB;AALH;AAFF,KADZ;AAWEE,UAAM;AACJP,YAAM,oBAAUC,MAAV,CAAiB,GAAjB,CADF;AAEJC,gBAAU;AACRM,aAAK;AACHJ,gBAAM,CAAC,CAAD,EAAI,GAAJ,CADH;AAEHC,eAAK;AAFF;AADG;AAFN;AAXR,GAFY,EAuBZ;AACEI,gBAAY;AADd,GAvBY,CAAd;;AA4BA,SAAOZ,KAAP;AACD,C;;AAED","file":"posts.js","sourcesContent":["import Sequilize from 'sequelize';\n\nexport default (sequelize, DataTypes) => {\n  const Model = sequelize.define(\n    'Post',\n    {\n      username: {\n        type: Sequilize.STRING(40),\n        validate: {\n          isIn: {\n            args: /\\w/gi,\n            msg: 'Must be only letters and numbers',\n          },\n          allowNull: { args: false, msg: 'Name cannot be null' },\n        },\n      },\n      text: {\n        type: Sequilize.STRING(200),\n        validate: {\n          len: {\n            args: [1, 200],\n            msg: 'Must be less than 200 symbols',\n          },\n        },\n      },\n    },\n    {\n      timestamps: true,\n    },\n  );\n\n  return Model;\n};\n\n/*\nPost.create({ username: 'barfooz', text: '45' })\n  .then(post => {\n    console.log(\n      post.get({\n        plain: true,\n      }),\n    );\n  })\n  .catch(error => {\n    if (error instanceof ValidationError) {\n      req.flash('error', error.message);\n      return signup(req, res);\n    }\n    next(error); //go to handle of unexpected  error\n  });\n*/\n"]}